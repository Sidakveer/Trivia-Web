{"ast":null,"code":"var _jsxFileName = \"/Users/sidakveersingh/Desktop/react/Trivia-app/trivia-app/src/components/Q.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Button from \"./Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Q(_ref) {\n  _s();\n  let {\n    update,\n    item: {\n      question,\n      correct_answer,\n      answers\n    }\n  } = _ref;\n  const [options, setOptions] = useState(newOptions());\n  const [disabled, setDisabled] = useState(false);\n  function newOptions() {\n    const newArr = [];\n    for (let i = 0; i < 4; i++) {\n      newArr.push({\n        value: answers[i],\n        isSelect: false,\n        isCorrect: false\n      });\n    }\n    return newArr;\n  }\n\n  // WORK HERE\n  function selected(id) {\n    setDisabled(true);\n    setOptions(options.map((item, index) => {\n      // console.log(item)\n      if (correct_answer === item.value && id === index) {\n        update();\n      }\n      if (correct_answer === item.value) {\n        return {\n          ...item,\n          isCorrect: true\n        };\n      }\n      if (id === index) {\n        return {\n          ...item,\n          isSelect: true\n        };\n      } else {\n        return {\n          ...item\n        };\n      }\n    }));\n  }\n\n  // console.log(update)\n  const buttons = options.map((item, index) => /*#__PURE__*/_jsxDEV(Button, {\n    item: item.value,\n    isSelect: item.isSelect,\n    isCorrect: item.isCorrect,\n    id: index,\n    selected: selected,\n    disable: disabled,\n    up: update\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 50\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      dangerouslySetInnerHTML: {\n        __html: question\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 10\n    }, this), buttons, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 10\n  }, this);\n}\n_s(Q, \"FfX13bF+y1YjaDhRNHb0bjEXlQ4=\");\n_c = Q;\nvar _c;\n$RefreshReg$(_c, \"Q\");","map":{"version":3,"names":["React","useState","Button","jsxDEV","_jsxDEV","Q","_ref","_s","update","item","question","correct_answer","answers","options","setOptions","newOptions","disabled","setDisabled","newArr","i","push","value","isSelect","isCorrect","selected","id","map","index","buttons","disable","up","fileName","_jsxFileName","lineNumber","columnNumber","className","children","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["/Users/sidakveersingh/Desktop/react/Trivia-app/trivia-app/src/components/Q.js"],"sourcesContent":["import React, {useState} from \"react\"\nimport Button from \"./Button\"\n\nexport default function Q({update, item: {question, correct_answer, answers}}){\n \n    const [options, setOptions] = useState(newOptions())\n    const [disabled, setDisabled] = useState(false)\n    \n    function newOptions() {\n        const newArr = []\n        for (let i=0; i < 4; i++){\n            newArr.push({\n                value: answers[i], \n                isSelect: false,\n                isCorrect: false}\n        )}\n        return newArr\n    }\n    \n    // WORK HERE\n    function selected(id){\n        setDisabled(true)\n        setOptions(options.map((item, index) => {\n            // console.log(item)\n           if (correct_answer === item.value && id === index){\n               update()\n           }     \n           if (correct_answer === item.value){\n               return {...item, isCorrect: true}   \n           }\n           if (id === index){\n              return {...item, isSelect: true}\n           }\n            else{\n                return {...item}\n            }\n        })\n        )\n    }\n    \n    \n    \n    // console.log(update)\n    const buttons = options.map((item, index) => <Button \n                                            item={item.value}\n                                            isSelect={item.isSelect}\n                                            isCorrect={item.isCorrect}\n                                            id={index} \n                                            selected={selected}\n                                            disable={disabled}\n                                            up={update}\n                                            />)\n    \n\n\n    return(\n        \n         <div className=\"main\">\n         <h2 dangerouslySetInnerHTML={{__html:question}}/>      \n         {buttons}\n         <hr/>\n         </div>\n \n        \n    )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,MAAM,MAAM,UAAU;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,eAAe,SAASC,CAACA,CAAAC,IAAA,EAAqD;EAAAC,EAAA;EAAA,IAApD;IAACC,MAAM;IAAEC,IAAI,EAAE;MAACC,QAAQ;MAAEC,cAAc;MAAEC;IAAO;EAAC,CAAC,GAAAN,IAAA;EAEzE,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAACc,UAAU,EAAE,CAAC;EACpD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAE/C,SAASc,UAAUA,CAAA,EAAG;IAClB,MAAMG,MAAM,GAAG,EAAE;IACjB,KAAK,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAC;MACrBD,MAAM,CAACE,IAAI,CAAC;QACRC,KAAK,EAAET,OAAO,CAACO,CAAC,CAAC;QACjBG,QAAQ,EAAE,KAAK;QACfC,SAAS,EAAE;MAAK,CAAC,CACxB;IAAA;IACD,OAAOL,MAAM;EACjB;;EAEA;EACA,SAASM,QAAQA,CAACC,EAAE,EAAC;IACjBR,WAAW,CAAC,IAAI,CAAC;IACjBH,UAAU,CAACD,OAAO,CAACa,GAAG,CAAC,CAACjB,IAAI,EAAEkB,KAAK,KAAK;MACpC;MACD,IAAIhB,cAAc,KAAKF,IAAI,CAACY,KAAK,IAAII,EAAE,KAAKE,KAAK,EAAC;QAC9CnB,MAAM,EAAE;MACZ;MACA,IAAIG,cAAc,KAAKF,IAAI,CAACY,KAAK,EAAC;QAC9B,OAAO;UAAC,GAAGZ,IAAI;UAAEc,SAAS,EAAE;QAAI,CAAC;MACrC;MACA,IAAIE,EAAE,KAAKE,KAAK,EAAC;QACd,OAAO;UAAC,GAAGlB,IAAI;UAAEa,QAAQ,EAAE;QAAI,CAAC;MACnC,CAAC,MACI;QACA,OAAO;UAAC,GAAGb;QAAI,CAAC;MACpB;IACJ,CAAC,CAAC,CACD;EACL;;EAIA;EACA,MAAMmB,OAAO,GAAGf,OAAO,CAACa,GAAG,CAAC,CAACjB,IAAI,EAAEkB,KAAK,kBAAKvB,OAAA,CAACF,MAAM;IACZO,IAAI,EAAEA,IAAI,CAACY,KAAM;IACjBC,QAAQ,EAAEb,IAAI,CAACa,QAAS;IACxBC,SAAS,EAAEd,IAAI,CAACc,SAAU;IAC1BE,EAAE,EAAEE,KAAM;IACVH,QAAQ,EAAEA,QAAS;IACnBK,OAAO,EAAEb,QAAS;IAClBc,EAAE,EAAEtB;EAAO;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACT,CAAC;EAI3C,oBAEK9B,OAAA;IAAK+B,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACrBhC,OAAA;MAAIiC,uBAAuB,EAAE;QAACC,MAAM,EAAC5B;MAAQ;IAAE;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,EAChDN,OAAO,eACRxB,OAAA;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAIf;AAAC3B,EAAA,CA9DuBF,CAAC;AAAAkC,EAAA,GAADlC,CAAC;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}