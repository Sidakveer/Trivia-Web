{"ast":null,"code":"var _jsxFileName = \"/Users/sidakveersingh/Desktop/Trivia-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Q from \"./components/Q\";\nimport { Freeze } from 'react-freeze';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [finish, setFinish] = useState(false);\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    fetch(\"https://opentdb.com/api.php?amount=5&category=20&type=multiple\").then(res => res.json()).then(res => {\n      const ques = res.results.map(item => ({\n        ...item,\n        answers: [item.correct_answer, ...item.incorrect_answers].sort(() => Math.random() - 0.5),\n        count: false\n      }));\n      setQuestions(ques);\n    });\n  }, []);\n  function updateCount() {\n    setCount(prevCount => prevCount + 1);\n  }\n  function play() {\n    setFinish(false);\n    window.location.reload(false);\n  }\n  function check() {\n    setFinish(true);\n  }\n  const elements = questions.map((item, index) => /*#__PURE__*/_jsxDEV(Q, {\n    update: updateCount,\n    id: index,\n    item: item\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 53\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"header-1\",\n        children: \"TEST YOUR KNOWLEDGE ON MYTHOLOGY?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Freeze, {\n        freeze: finish,\n        children: elements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), !finish && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: check,\n        className: \"check-button\",\n        children: \" Check Score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), finish && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Your final score is \", count, \"/5\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 44\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: play,\n        className: \"check-button\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), \"Play Again\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"zMrDHO9vADYvPgCLapqc0DsVXf8=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Q","Freeze","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","questions","setQuestions","finish","setFinish","count","setCount","fetch","then","res","json","ques","results","map","item","answers","correct_answer","incorrect_answers","sort","Math","random","updateCount","prevCount","play","window","location","reload","check","elements","index","update","id","fileName","_jsxFileName","lineNumber","columnNumber","children","className","freeze","onClick","_c","$RefreshReg$"],"sources":["/Users/sidakveersingh/Desktop/Trivia-app/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport Q from \"./components/Q\"\nimport { Freeze } from 'react-freeze';\n\nexport default function App() {\n    \n    const [questions, setQuestions] = useState([])\n    const [finish, setFinish] = useState(false)\n    const [count, setCount] = useState(0)\n\n    \nuseEffect(() => {\n     fetch(\"https://opentdb.com/api.php?amount=5&category=20&type=multiple\")\n     .then(res => res.json())\n     .then(res => {\n         const ques = res.results.map(item => ({\n            ...item,\n            answers: [item.correct_answer, ...item.incorrect_answers].sort(() => Math.random() - 0.5),\n            count: false,\n         }\n         ))  \n         setQuestions(ques)\n     })\n      \n}, [])\n    \n    \n    function updateCount(){\n        setCount(prevCount => prevCount + 1)     \n    }\n\n    function play(){\n        setFinish(false)\n        window.location.reload(false)\n    }\n    \n    \n    function check(){\n        setFinish(true)\n    }\n    \n    const elements = questions.map((item, index) => <Q key={index}\n                                                     update={updateCount}\n                                                     id={index}\n                                                     item={item}\n                                                      />)\n\n    return(\n        <>\n        <div className=\"questions\" >\n        <h1 className=\"header-1\">TEST YOUR KNOWLEDGE ON MYTHOLOGY?</h1>\n        <Freeze freeze={finish}>\n        {elements}\n        </Freeze>\n        \n        {!finish && <button onClick={check} className=\"check-button\" > Check Score</button>}\n        {/* <div className=\"score\"> */}\n        </div>\n    \n        {finish && <div className=\"score\"> <h1>Your final score is {count}/5</h1>\n          <button onClick={play} className=\"check-button\" > <></>Play Again</button> </div>}\n        \n        \n        \n        {/* </div> */}\n        \n        </>\n    )\n}\n\n\n\n\n \n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}